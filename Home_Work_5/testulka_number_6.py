import time

input_str = 'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'BBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEE' \
            'FFGGGKLRDYUIKKKFAAAAAABBBDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHK' \
            'KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU' \
            'UUUUUUUURRRRRRRRRRRRRRRRRRRRRRFFFFFFFFFFFFFFFFFFFFFFFFFFFFFHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHhHHHHH' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB' \
            'AAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBAAAABBBCCXYZDDDDEEEFFGGGKLRDYUIKKKFAAAAAABBB'


print('Входящая строка:- {}'.format(input_str))
envig_start = time.perf_counter()
def RLE_2(input_str):
    if input_str == "":
        return ""
    list_ = [input_str[0]]
    count = 1
    for i in range(1, len(input_str)):
        if input_str[i-1] == input_str[i]:
            count += 1
            if i == len(input_str)-1:
                list_.append(str(count))
        else:
            if count > 1:
                list_.append(str(count))
            list_.append(input_str[i])
            count = 1
    list_result = "".join(list_)
    return list_result
letters = input_str
rle_2 = RLE_2(input_str)
print('Выходящая строка: - {}'.format(rle_2))
envig_end = time.perf_counter()
time_envig = envig_end - envig_start
print('Time_Envig - {}'.format(time_envig))




start_my = time.perf_counter()
print('Входящая строка:- {}'.format(input_str))
def f(col):
    output_str = ''
    count = 0
    count1 = 0
    for i in col:
        if count1 != len(col):
            char = col[count1]
        else:
            break
        for j in range(count1, len(col)):
            char2 = input_str[j]
            if char2 == char:
                count += 1
                count1 += 1
            else:
                output_str += char
                count = str(count)
                if count != '1':
                    output_str += count
                count = 0
                break
    output_str += col[-1]
    count = str(count)
    output_str += count
    return output_str
str_result = f(input_str)
print('Выходящая строка: - {}'.format(str_result))
end_my = time.perf_counter()
time_my = end_my - start_my
print('Time_my - {}'.format(time_my))


print("Кто быстрее: - (Time_my / Time_Envig) -: {}".format(time_my/time_envig))